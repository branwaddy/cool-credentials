{"ast":null,"code":"var _jsxFileName = \"/Users/brandonwaddy/cool-credentials/front/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Link, BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Credentials from \"./components/Credentials\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tokenGenerated, generateToken] = useState(0);\n  const [currentUser, setUser] = useState(0);\n  const [currToken, setCurrToken] = useState();\n  const [credList, setList] = useState(); // Function requests all jobs from back end, and saves state\n\n  function getCreds() {\n    getAuthData(currToken, \"http://localhost:8080/credentials\").then(res => res.json()).then(result => {\n      setList(result[1]);\n    }).catch(err => {\n      console.log(err);\n    });\n  } // Function makes post request to endpoint 'url' with body 'data'\n\n\n  function postData(url, data) {\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json());\n  }\n\n  function getAuthData(token, url) {\n    return fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(response => response.json());\n  }\n\n  function register(inputUsername, inputPassword) {\n    const details = {\n      \"username\": inputUsername,\n      \"password\": inputPassword,\n      \"site\": \"credentials\"\n    };\n    postData('http://localhost:8080/register', details).then(data => {\n      const newToken = data.token;\n      generateToken(newToken);\n    }).catch(error => console.error(error));\n  }\n\n  function login(token) {\n    setCurrToken(token);\n    getAuthData(token, \"http://localhost:8080/login\").then(data => {\n      if (data.name) {\n        console.log(data);\n        const user = {\n          \"name\": data.name\n        };\n        setUser(user);\n      } else {\n        setUser(false);\n      }\n    }).catch(error => console.error(error));\n  }\n\n  function wipeToken() {\n    generateToken(0);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/credentials\",\n        element: /*#__PURE__*/_jsxDEV(Credentials, {\n          getCreds: getCreds(),\n          creds: credList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          submit: login,\n          user: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {\n          submit: register,\n          token: tokenGenerated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          wipeToken: wipeToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2X1GHMN0DjvCAhNMUG5j7Gl+qjA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/brandonwaddy/cool-credentials/front/src/App.js"],"names":["useState","Link","BrowserRouter","Routes","Route","Register","Home","Login","Credentials","App","tokenGenerated","generateToken","currentUser","setUser","currToken","setCurrToken","credList","setList","getCreds","getAuthData","then","res","json","result","catch","err","console","log","postData","url","data","fetch","method","headers","body","JSON","stringify","response","token","register","inputUsername","inputPassword","details","newToken","error","login","name","user","wipeToken"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Link, BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Credentials from \"./components/Credentials\";\n\nfunction App() {\n  const [tokenGenerated, generateToken] = useState(0);\n  const [currentUser, setUser] = useState(0);\n  const [currToken, setCurrToken] = useState();\n  const [credList, setList] = useState();\n  // Function requests all jobs from back end, and saves state\n  function getCreds() {\n    getAuthData(currToken, \"http://localhost:8080/credentials\")\n    .then(res=> \n        res.json()\n    )\n    .then(result => {\n        setList(result[1]);\n    })\n    .catch(err=>{\n        console.log(err);\n    })\n  }\n  \n  // Function makes post request to endpoint 'url' with body 'data'\n  function postData(url, data){\n    return fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n    .then(response=>response.json());\n  }\n  function getAuthData(token, url){\n    return fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + token\n      },\n    })\n    .then(response=>response.json());\n  }\n\n  function register(inputUsername, inputPassword) {\n    const details = {\"username\": inputUsername, \"password\": inputPassword, \"site\": \"credentials\"};\n    postData('http://localhost:8080/register', details)\n    .then(data => {\n      const newToken = data.token;\n      generateToken(newToken);\n    })\n    .catch(error => console.error(error))\n  }\n  function login(token) {\n    setCurrToken(token);\n    getAuthData(token, \"http://localhost:8080/login\")\n    .then(data => {\n      if (data.name) {\n        console.log(data);\n        const user = {\"name\": data.name};\n        setUser(user);\n      }\n      else {\n        setUser(false);\n      }\n      \n    })\n    .catch(error => console.error(error))\n  }\n  function wipeToken() {\n    generateToken(0);\n  }\n  return (\n    <BrowserRouter>\n      \n      <Routes>\n        <Route path='/credentials' element={<Credentials getCreds={getCreds()} creds={credList}/>}/>\n        <Route path='/login' element={<Login submit={login} user={currentUser}/>}/>\n        <Route path='/register' element={<Register submit={register} token={tokenGenerated}/>}/>\n        <Route path='/' element={<Home wipeToken={wipeToken}/>}/>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}